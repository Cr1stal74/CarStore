// <auto-generated />
using System;
using CarStore.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarStore.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarStore.Database.Entities.Car", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Colors")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("colors");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    b.Property<int>("DoorsCount")
                        .HasColumnType("integer")
                        .HasColumnName("doors_count");

                    b.Property<double>("EngineVolume")
                        .HasColumnType("double precision")
                        .HasColumnName("engine_volume");

                    b.Property<int>("HorsePowers")
                        .HasColumnType("integer")
                        .HasColumnName("horse_powers");

                    b.Property<long[]>("ImageIds")
                        .IsRequired()
                        .HasColumnType("bigint[]")
                        .HasColumnName("image_ids");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("integer")
                        .HasColumnName("release_year");

                    b.Property<int>("StartPrice")
                        .HasColumnType("integer")
                        .HasColumnName("start_price");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("CarStore.Database.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long>("LogoPictureId")
                        .HasColumnType("bigint")
                        .HasColumnName("logo_picture_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("LogoPictureId");

                    b.ToTable("companies");
                });

            modelBuilder.Entity("CarStore.Database.Entities.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("content");

                    b.Property<long?>("ImageIds")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ImageIds");

                    b.ToTable("images");
                });

            modelBuilder.Entity("CarStore.Database.Entities.Car", b =>
                {
                    b.HasOne("CarStore.Database.Entities.Company", "Company")
                        .WithMany("Cars")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CarStore.Database.Entities.Company", b =>
                {
                    b.HasOne("CarStore.Database.Entities.Image", "LogoPicture")
                        .WithMany()
                        .HasForeignKey("LogoPictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogoPicture");
                });

            modelBuilder.Entity("CarStore.Database.Entities.Image", b =>
                {
                    b.HasOne("CarStore.Database.Entities.Car", null)
                        .WithMany("Images")
                        .HasForeignKey("ImageIds");
                });

            modelBuilder.Entity("CarStore.Database.Entities.Car", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("CarStore.Database.Entities.Company", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
